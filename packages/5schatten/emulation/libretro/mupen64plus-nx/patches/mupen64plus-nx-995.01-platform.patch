From 92ee854e8626f8da4f21830fb739b59a7e3cc321 Mon Sep 17 00:00:00 2001
From: 5schatten <supervisedthinking@gmail.com>
Date: Tue, 16 Jul 2019 20:28:54 +0200
Subject: [PATCH] Makefile: added platforms for AML & RK / updated GLFunctions

- Amlogic S905/S905X/S912/S905X2/S922X/A311D
- Rockchip RK3288/RK3328/RK3399
- updated GLFunctions.cpp to define USE_GENERIC_GLESV2
- removed UNDEF_GL_GLEXT_PROTOTYPES from GLFunctions.h
---
 .../Graphics/OpenGLContext/GLFunctions.cpp    |  4 +-
 .../src/Graphics/OpenGLContext/GLFunctions.h  |  4 --
 Makefile                                      | 57 ++++++++++++++++++-
 3 files changed, 57 insertions(+), 8 deletions(-)

diff --git a/GLideN64/src/Graphics/OpenGLContext/GLFunctions.cpp b/GLideN64/src/Graphics/OpenGLContext/GLFunctions.cpp
index 7dfe92a..ca96b98 100644
--- a/GLideN64/src/Graphics/OpenGLContext/GLFunctions.cpp
+++ b/GLideN64/src/Graphics/OpenGLContext/GLFunctions.cpp
@@ -12,7 +12,7 @@
 #define glGetProcAddress wglGetProcAddress
 #define GL_GET_PROC_ADR(proc_type, proc_name) ptr##proc_name = (proc_type) glGetProcAddress("gl"#proc_name)
 
-#elif defined(VERO4K) || defined(ODROID) || defined(VC) || defined(AMLOGIC)
+#elif defined(VERO4K) || defined(ODROID) || defined(VC) || defined(USE_GENERIC_GLESV2)
 
 #include <dlfcn.h>
 #define GL_GET_PROC_ADR(proc_type, proc_name) ptr##proc_name = (proc_type) dlsym(gles2so, "gl"#proc_name);
@@ -210,7 +210,7 @@ extern "C" void initGLFunctions()
 	void *gles2so = dlopen("/usr/lib/arm-linux-gnueabihf/libGLESv2.so", RTLD_NOW);
 #elif defined(VERO4K)
        void *gles2so = dlopen("/opt/vero3/lib/libGLESv2.so", RTLD_NOW);
-#elif defined(AMLOGIC)
+#elif defined(USE_GENERIC_GLESV2)
        void *gles2so = dlopen("/usr/lib/libGLESv2.so", RTLD_NOW);
 #endif
 
diff --git a/GLideN64/src/Graphics/OpenGLContext/GLFunctions.h b/GLideN64/src/Graphics/OpenGLContext/GLFunctions.h
index 2e40fe5..a5fc532 100644
--- a/GLideN64/src/Graphics/OpenGLContext/GLFunctions.h
+++ b/GLideN64/src/Graphics/OpenGLContext/GLFunctions.h
@@ -7,13 +7,9 @@
 #include <winlnxdefs.h>
 #endif
 
-#ifdef UNDEF_GL_GLEXT_PROTOTYPES
-// Issues on Raspberry since GL2.h defines it and causes
-// Macro shenanigans
 #ifdef GL_GLEXT_PROTOTYPES
 #undef GL_GLEXT_PROTOTYPES
 #endif // GL_GLEXT_PROTOTYPES
-#endif // UNDEF_GL_GLEXT_PROTOTYPES
 
 #ifdef EGL
 #include <GL/glcorearb.h>
diff --git a/Makefile b/Makefile
index 4cc7b90..aa1a1dc 100644
--- a/Makefile
+++ b/Makefile
@@ -142,7 +142,7 @@ else ifneq (,$(findstring rpi,$(platform)))
       CPUFLAGS += -march=armv8-a+crc -mtune=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard
       HAVE_NEON = 1
    endif
-   COREFLAGS += -DUNDEF_GL_GLEXT_PROTOTYPES -DOS_LINUX
+   COREFLAGS += -DOS_LINUX
    ASFLAGS = -f elf -d ELF_TYPE
 
 # Nintendo Switch
@@ -214,6 +214,34 @@ else ifneq (,$(findstring odroid,$(platform)))
    COREFLAGS += -DOS_LINUX
    ASFLAGS = -f elf -d ELF_TYPE
 
+# Amlogic S905/S905X/S912 (AMLGXBB/AMLGXL/AMLGXM) / S905X2 (AMLG12A) & S922X/A311D (AMLG12B) - 32-bit userspace
+else ifneq (,$(findstring AMLG,$(platform)))
+   TARGET := $(TARGET_NAME)_libretro.so
+   LDFLAGS += -shared -Wl,--version-script=$(LIBRETRO_DIR)/link.T -Wl,--no-undefined -ldl
+   CPUFLAGS += -march=armv8-a+crc -mfloat-abi=hard -mfpu=neon-fp-armv8
+
+   ifneq (,$(findstring AMLG12,$(platform)))
+      ifneq (,$(findstring AMLG12B,$(platform)))
+         CPUFLAGS += -mtune=cortex-a73.cortex-a53
+      else
+         CPUFLAGS += -mtune=cortex-a53
+      endif
+      GLES3 = 1
+   else ifneq (,$(findstring AMLGX,$(platform)))
+      CPUFLAGS += -mtune=cortex-a53
+      ifneq (,$(findstring AMLGXM,$(platform)))
+         GLES3 = 1
+      else
+         GLES = 1
+      endif
+   endif
+
+   GL_LIB := -lGLESv2
+   HAVE_NEON = 1
+   WITH_DYNAREC=arm
+   COREFLAGS += -DUSE_GENERIC_GLESV2 -DOS_LINUX
+   ASFLAGS = -f elf -d ELF_TYPE
+
 # Amlogic S905/S912
 else ifneq (,$(findstring amlogic,$(platform)))
    TARGET := $(TARGET_NAME)_libretro.so
@@ -223,9 +251,34 @@ else ifneq (,$(findstring amlogic,$(platform)))
    CPUFLAGS += -marm -mfloat-abi=hard -mfpu=neon
    HAVE_NEON = 1
    WITH_DYNAREC=arm
-   COREFLAGS += -DAMLOGIC -DOS_LINUX -DUNDEF_GL_GLEXT_PROTOTYPES
+   COREFLAGS += -DUSE_GENERIC_GLESV2 -DOS_LINUX
    CPUFLAGS += -march=armv8-a -mcpu=cortex-a53 -mtune=cortex-a53
 
+# Rockchip RK3288 e.g. Tinker Board / RK3328 / RK3399 e.g. RockPro64 - 32-bit userspace
+else ifneq (,$(findstring RK,$(platform)))
+   TARGET := $(TARGET_NAME)_libretro.so
+   LDFLAGS += -shared -Wl,--version-script=$(LIBRETRO_DIR)/link.T -Wl,--no-undefined -ldl
+
+   ifneq (,$(findstring RK33,$(platform)))
+      CPUFLAGS += -march=armv8-a+crc -mfloat-abi=hard -mfpu=neon-fp-armv8
+      ifneq (,$(findstring RK3399,$(platform)))
+         CPUFLAGS += -mtune=cortex-a72.cortex-a53
+         GLES3 = 1
+      else ifneq (,$(findstring RK3328,$(platform)))
+         CPUFLAGS += -mtune=cortex-a53
+         GLES = 1
+      endif
+   else ifneq (,$(findstring RK3288,$(platform)))
+      CPUFLAGS += -march=armv7ve -mtune=cortex-a17 -mfloat-abi=hard -mfpu=neon-vfpv4
+      GLES3 = 1
+   endif
+
+   GL_LIB := -lGLESv2
+   HAVE_NEON = 1
+   WITH_DYNAREC=arm
+   COREFLAGS += -DUSE_GENERIC_GLESV2 -DOS_LINUX
+   ASFLAGS = -f elf -d ELF_TYPE
+
 # OS X
 else ifneq (,$(findstring osx,$(platform)))
    TARGET := $(TARGET_NAME)_libretro.dylib
