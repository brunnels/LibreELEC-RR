# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2018-present 5schatten (https://github.com/5schatten)

# Set common paths
export RR_ADVANCED_CONF=/storage/.config/rr-config/advanced.conf
export RR_ADVANCED_CONF_DEFAULT=/usr/share/rr-config/advanced.conf

# Check common stuff
set_RR_environment() {
  # Check if config file is present
  if [ ! -f "${RR_ADVANCED_CONF}" ]; then
    cp ${RR_ADVANCED_CONF_DEFAULT} "${RR_ADVANCED_CONF}"
  elif [ -f "${RR_ADVANCED_CONF}" ]; then
    RR_CONFIG_VERSION=$(cat ${RR_ADVANCED_CONF} | grep RR_CONFIG_VERSION= | cut -f2- -d"=")
    RR_CONFIG_VERSION_DEFAULT=$(cat ${RR_ADVANCED_CONF_DEFAULT} | grep RR_CONFIG_VERSION= | cut -f2- -d"=")
    
    if [ ! "${RR_CONFIG_VERSION}" = "${RR_CONFIG_VERSION_DEFAULT}" ]; then
      cp -f ${RR_ADVANCED_CONF_DEFAULT} "${RR_ADVANCED_CONF}"
    fi
  fi

  # First run ?
  RR_FIRST_RUN=$(cat ${RR_ADVANCED_CONF} | grep RR_FIRST_RUN= | cut -f2- -d"=")
  if [ "${RR_FIRST_RUN}" = "true" ]; then
    sed -e "s/RR_FIRST_RUN=true/RR_FIRST_RUN=false/" -i ${RR_ADVANCED_CONF}
  fi

  # Set 2048/MrBoom demos
  RR_EMULATION_DEMOS=$(cat ${RR_ADVANCED_CONF} | grep RR_EMULATION_DEMOS= | cut -f2- -d"=")
  LR2048_SCRIPT=/usr/bin/2048.sh
  LR2048_LINK=/storage/roms/2048/2048.sh
  MRBOOM_SCRIPT=/usr/bin/mrboom.sh
  MRBOOM_LINK=/storage/roms/mrboom/MrBoom.sh
  if [ "${RR_EMULATION_DEMOS}" = "true" ] && [ "${RR_FIRST_RUN}" = "true" ]; then
    ln -sf ${LR2048_SCRIPT} ${LR2048_LINK}
    ln -sf ${MRBOOM_SCRIPT} ${MRBOOM_LINK}
  elif [ ! "${RR_EMULATION_DEMOS}" = "true" ] ; then
    if [ -L ${LR2048_LINK} ]; then
      rm -f ${LR2048_LINK}
    fi
    if [ -L ${MRBOOM_LINK} ]; then
      rm -f ${MRBOOM_LINK}
    fi
  fi

  # Enable PrBoom & TyrQuake in Emulationstation / Pegasus-Frontend
  RR_EMULATION_ID_GAMES=$(cat ${RR_ADVANCED_CONF} | grep RR_EMULATION_ID_GAMES= | cut -f2- -d"=")

  # Set PrBoom/Doom symlinks
  DOOM_SCRIPT=/storage/roms/prboom/Doom.sh
  DOOM_WAD_PATH="/storage/roms/prboom/"*"oom/doom.wad"
  PRBOOM_WAD_PATH="/storage/roms/prboom/"*"oom/prboom.wad"
  if [ -f ${DOOM_WAD_PATH} ] && [ ${RR_EMULATION_ID_GAMES} = "true" ]; then
    pathname=$(dirname ${DOOM_WAD_PATH})
    pathname=${pathname}
    ln -sf /usr/share/prboom/prboom.wad "${pathname}"/prboom.wad
    ln -sf /usr/bin/doom.sh ${DOOM_SCRIPT}
  else
    if [ -L ${PRBOOM_WAD_PATH} ]; then
      rm ${PRBOOM_WAD_PATH}
    fi
    if [ -L ${DOOM_SCRIPT} ]; then
      rm ${DOOM_SCRIPT}
    fi
  fi

  # Set PrBoom/Doom 2 symlinks
  DOOM2_SCRIPT=/storage/roms/prboom/Doom2.sh
  DOOM2_WAD_PATH="/storage/roms/prboom/"*"oom"*"2/doom2.wad"
  PRBOOM2_WAD_PATH="/storage/roms/prboom/"*"oom"*"2/prboom.wad"
  if [ -f ${DOOM2_WAD_PATH} ] && [ ${RR_EMULATION_ID_GAMES} = "true" ]; then
    pathname=$(dirname ${DOOM2_WAD_PATH})
    pathname=${pathname}
    ln -sf /usr/share/prboom/prboom.wad "${pathname}"/prboom.wad
    ln -sf /usr/bin/doom2.sh ${DOOM2_SCRIPT}
  else
    if [ -L ${PRBOOM2_WAD_PATH} ]; then
      rm ${PRBOOM2_WAD_PATH}
    fi
    if [ -L ${DOOM2_SCRIPT} ]; then
      rm ${DOOM2_SCRIPT}
    fi
  fi

  # Set TyrQuake/Quake symlinks
  QUAKE_SCRIPT="/storage/roms/tyrquake/Quake.sh"
  QUAKE_PAK0_PATH="/storage/roms/tyrquake/id1/pak0.pak"
  QUAKE_PAK1_PATH="/storage/roms/tyrquake/id1/pak1.pak"
  if [ -f "${QUAKE_PAK0_PATH}" ] && [ -f "${QUAKE_PAK1_PATH}" ] && [ ${RR_EMULATION_ID_GAMES} = "true" ]; then
    ln -sf /usr/bin/quake.sh ${QUAKE_SCRIPT}
  else
    if [ -L ${QUAKE_SCRIPT} ]; then
      rm ${QUAKE_SCRIPT}
    fi
  fi

  # RETROARCH: set cache directory path if available
  RETROARCH_CONFIG=/storage/.config/retroarch/retroarch.cfg
  RETROARCH_TEMP_PATH=/tmp/emulation
  if [ -d ${RETROARCH_TEMP_PATH} ]; then
    if [ ! -d ${RETROARCH_TEMP_PATH}/retroarch ]; then
      mkdir -p ${RETROARCH_TEMP_PATH}/retroarch
    fi
    sed -e "s/cache_directory = \"\"/cache_directory = \"\/tmp\/emulation\/retroarch\"/" -i $RETROARCH_CONFIG
  else
    sed -e "s/cache_directory = \"\/tmp\/emulation\/retroarch\"/cache_directory = \"\"/" -i $RETROARCH_CONFIG
  fi
}
